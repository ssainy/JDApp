import java.awt.Component;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.*;

import javax.swing.*;

import Test.Util.Base64Util;
import Test.Util.CheckData;
import Test.Util.HttpManager;
import net.sf.json.JSONObject;
import org.apache.commons.io.IOUtils;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 *//*
*/
/**
 *
 * @author wdl
 */
public class WSTestJFrame extends javax.swing.JFrame {
/**
     * Creates new form WSTestJFrame
     */
    private Component parent;
    String serviceName = null;
    String portName = null;
    String operationName = null;
    String GlobalXml; //外层报文变量
    String lsh = null; //内层报文流水号
    static String Updatecontent;
    static String JieDian;
    public WSTestJFrame() {
        initComponents();
        setLocationRelativeTo(getOwner());//窗体居中
    }
/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

    buttonGroup_c = new javax.swing.ButtonGroup();
    jButton_Send = new javax.swing.JButton();
    jButton_Clear = new javax.swing.JButton();
    jRadioButton_post = new javax.swing.JRadioButton();
    jRadioButton_sdk = new javax.swing.JRadioButton();
    jLabel1 = new javax.swing.JLabel();
    jTextField_UrlPath = new javax.swing.JTextField();
    jScrollPane2 = new javax.swing.JScrollPane();
    jTextArea_receive = new javax.swing.JTextArea();
    jTextField_appid = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jTextField_version = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    jTextField_taxpayerid = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    jTextField_entcode = new javax.swing.JTextField();
    jLabel7 = new javax.swing.JLabel();
    jTextField_username = new javax.swing.JTextField();
    jLabel8 = new javax.swing.JLabel();
    jTextField_passwd = new javax.swing.JTextField();
    jLabel9 = new javax.swing.JLabel();
    jTextField_filepath = new javax.swing.JTextField();
    jButton_select = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jButton_Send.setText("发送");
    jButton_Send.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            try {
                jButton_SendActionPerformed(evt);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    });

    jButton_Clear.setText("清空");
    jButton_Clear.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton_ClearActionPerformed(evt);
        }
    });

    buttonGroup_c.add(jRadioButton_post);
    jRadioButton_post.setSelected(true);
    jRadioButton_post.setText("post");
    jRadioButton_post.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jRadioButton_postItemStateChanged(evt);
        }
    });
    jRadioButton_post.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jRadioButton_postActionPerformed(evt);
        }
    });

    buttonGroup_c.add(jRadioButton_sdk);
    jRadioButton_sdk.setText("sdk");
    jRadioButton_sdk.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jRadioButton_sdkItemStateChanged(evt);
        }
    });

    jLabel1.setText("URL路径:");

    jTextArea_receive.setColumns(20);
    jTextArea_receive.setLineWrap(true);
    jTextArea_receive.setRows(5);
    jScrollPane2.setViewportView(jTextArea_receive);



    jLabel3.setText("APPId:");

    jLabel4.setText("version:");

    jLabel5.setText("taxpayerId:");



    jLabel6.setText("enterpriseCode:");



    jLabel7.setText("userName:");



    jLabel8.setText("passwd:");



    jLabel9.setText("选择文件路径:");

    jButton_select.setText("...");
    jButton_select.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton_SelectActionPerformed(evt);
        }
    });
    jButton_select.setToolTipText("");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_appid, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_entcode, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(51, 51, 51)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel4))
                            .addGap(18, 18, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                            .addComponent(jTextField_username, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel8))
                                    .addGroup(layout.createSequentialGroup()
                                            .addComponent(jTextField_version, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel5)))
                            .addGap(36, 36, 36)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField_taxpayerid, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_passwd, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel1)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(jTextField_UrlPath, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                            .addGap(233, 233, 233)
                                                            .addComponent(jButton_Send, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(124, 124, 124)
                                                            .addComponent(jButton_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel9)
                                                            .addGap(18, 18, 18)
                                                            .addComponent(jTextField_filepath, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(18, 18, 18)
                                                            .addComponent(jButton_select, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                            .addGap(203, 203, 203)
                                            .addComponent(jRadioButton_post)
                                            .addGap(222, 222, 222)
                                            .addComponent(jRadioButton_sdk)))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jTextField_UrlPath, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jRadioButton_post)
                                    .addComponent(jRadioButton_sdk))
                            .addGap(20, 20, 20)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField_appid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jTextField_version, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(jTextField_taxpayerid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGap(7, 7, 7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField_entcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jTextField_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_passwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel9)
                                            .addComponent(jTextField_filepath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton_select))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton_Send)
                                    .addComponent(jButton_Clear))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addContainerGap())
    );

    pack();
}// </editor-fold>
    private String selectEntry(Vector v, String entryName) {
		if (v.size() == 0) {
			return null;
		} else if (v.size() > 1) {
			System.out.println("1111111111111111111");
			return "null";
		} else {
			return (String) v.elementAt(0);
		}
	}
        //选择文件
	private void jButton_SelectActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);//设置只能选择目录和目录下文件
        String path = System.getProperty("user.dir");
        chooser.setCurrentDirectory(new File(path));
        int returnVal = chooser.showOpenDialog(parent);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String selectPath = chooser.getSelectedFile().getPath();//选择文件路径
            jTextField_filepath.setText(selectPath); //把目录传给小文本框
        }
	}
//将选择目录下的文件路径遍历存到filelist中
	private static ArrayList<String> filelist = new ArrayList<String>();
private static void getFiles(String filePath){

	     File root = new File(filePath);
         File[] files = root.listFiles();
         filelist.clear();
	     for(File file:files){
	        if(file.isDirectory()){
	           getFiles(file.getAbsolutePath());
	        }else{
	    	 filelist.add(file.getAbsolutePath());
	       }
	      }
	 }

	private void jButton_ClearActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        jTextArea_receive.setText(""); //清空文本框
    }
    private void jRadioButton_sdkItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:

    }

    private void jRadioButton_postItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:

    }

    private void jRadioButton_postActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jButton_SendActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        int i=0;
        int j=0;
        int count=0;
        String str_Url = jTextField_UrlPath.getText();

        String selectedPath=jTextField_filepath.getText();
        getFiles(selectedPath);
        SimpleDateFormat dtime = new SimpleDateFormat("yyyyMMddHHmmss");
        String doctime = dtime.format(new Date());
        for(String selectPath:filelist){
            count=count+1;
            jTextField_filepath.setText(selectedPath);
            System.out.println("路径：" + selectPath);
            jTextArea_receive.append("路径："+"\n"+selectPath+"\n");
            File json = new File(selectPath);
            //获取内层报文的数据
            FileInputStream ing = new FileInputStream(json);
            //File neijson = new File(json.toString());
            //ing = new FileInputStream(neijson);
            String innerjson = IOUtils.toString(ing, "UTF-8");
            //String send_content = Test.Util.CheckData.Base64Util.encodeutf8(innerjson);
            //修改内层报文的流水号
            JSONObject lsh1 = JSONObject.fromObject(innerjson);
            SimpleDateFormat sdf1 = new SimpleDateFormat("MMddHHmmss");
            String starttime = sdf1.format(new Date());
            String fpqqlsh="test12"+(int)(Math.random()*9000+1000) +starttime;
            lsh1.put("lsh",fpqqlsh);
            String injson=lsh1.toString();
            System.out.println("the injson is :"+injson);
            String send_content = Base64Util.encodeutf8(injson);
            String path = System.getProperty("user.dir");
            JSONObject responsedatacontent=null;
            try {
                String Radio_S = "false";
                Enumeration<AbstractButton> radioBtns = buttonGroup_c.getElements();
                while (radioBtns.hasMoreElements()) {
                    AbstractButton btn = radioBtns.nextElement();
                    if (btn.isSelected()) {
                        Radio_S = btn.getText();
                        break;
                    }
                }
                SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");
                String startTime = sdf.format(new Date());
                String qqlsh="test123" +(int)(Math.random()*9000+1000) + startTime;
                //分别选择两种不同的传值方式
                if (Radio_S.equals("post")) {
                    //获取外层报文的数据
                    File pathjson = new File(path + "\\global_model.json"); //获取外层报文所在地址
                    FileInputStream inner = new FileInputStream(pathjson);
                    File gf = new File(pathjson.toString());
                    inner = new FileInputStream(gf);
                    String outjson = IOUtils.toString(inner, "UTF-8");
                    //将内层报文的数据加密后放到外层报文的content中
                    JSONObject data = JSONObject.fromObject(outjson);
                    JSONObject datacontent= JSONObject.fromObject((data.get("data")));
                    datacontent.put("content",send_content);
                    String send_json=datacontent.toString();
                    data.put("data",send_json);
                    String send_json1=data.toString();
                    //修改外层报文的流水号
                    JSONObject lsh = JSONObject.fromObject(send_json1);
                    JSONObject lshcontent= JSONObject.fromObject((lsh.get("globalInfo")));
                    lshcontent.put("dataExchangeId",qqlsh);
                    System.out.println("lshcontent is :"+lshcontent.get("dataExchangeId"));
                    String send_request=lshcontent.toString();
                    data.put("globalInfo",send_request);
                    String send_request1=data.toString();
                    System.out.println("传送的数据为："+send_request1);
                    String ret = HttpManager.HttpC(str_Url, send_request1);
                    jTextArea_receive.append("返回的数据为："+"\n"+ret+"\n");
                    System.out.println("返回的数据为："+"\n"+ret);
                    //获取返回内容的returncode和returnmessage的内容
                    JSONObject returncontent = JSONObject.fromObject(ret);
                    String returncode=( (JSONObject.fromObject(returncontent.get("returnStateInfo"))).get("returnCode")).toString();
                    System.out.println("the returnCode is:"+returncode);
                    String returnmessage=( (JSONObject.fromObject(returncontent.get("returnStateInfo"))).get("returnMessage")).toString();
                    System.out.println("the returnMessage is:"+returnmessage);
                    String split1[]=selectPath.split(".json");
                    String splitpath=split1[0];
                    String expresult=splitpath.substring(splitpath.length()-4,splitpath.length());
                    jTextArea_receive.append("预期结果为 ：" + expresult + "\n");
                    //判断预期结果与实际结果的比较

                    if ((expresult.equals("PASS")&&returncode.equals("0000"))||(expresult.equals("FAIL")&&!returncode.equals("0000"))){
                        jTextArea_receive.append("测试结果为 ：测试通过" + "\n");
                        String writemessage="报文路径为 ："+selectPath+"\r\n"+"返回信息为 ："+returnmessage+"\r\n"+"返回代码为 ："+returncode+"\r\n"+"预期结果为 ："+expresult+"\r\n";
                        writeTxt(path+"\\"+doctime+"通过数据.txt",writemessage);
                        i=i+1;
                    }else {
                        jTextArea_receive.append("测试结果为 :测试失败" + "\n");
                        String writemessage="报文路径为 ："+selectPath+"\r\n"+"返回信息为 ："+returnmessage+"\r\n"+"返回代码为 ："+returncode+"\r\n"+"预期结果为 ："+expresult+"\r\n"+"发送内层报文内容为 ："+"\r\n"+injson+"\r\n"+"发送外层报文内容为 ："+"\r\n"+send_request1+"\r\n"+"返回报文内容为 ："+"\r\n"+ret+"\r\n";
                        writeTxt(path+"\\"+doctime+"失败数据.txt",writemessage);
                        j=j+1;
                    }

                } else {
                    //通过SDK方式传值
                    OpenAPISdkTest.GlobalInfo1 = jTextField_appid.getText();
                    OpenAPISdkTest.GlobalInfo2 = jTextField_version.getText();
                    OpenAPISdkTest.enterpriseInfo1 = jTextField_taxpayerid.getText();
                    OpenAPISdkTest.enterpriseInfo2 = jTextField_entcode.getText();
                    OpenAPISdkTest.userInfo1 = jTextField_username.getText();
                    OpenAPISdkTest.userInfo2 = jTextField_passwd.getText();
                    String[] resstr = OpenAPISdkTest.doApi(str_Url, injson,qqlsh);

                    System.out.println("返回数据为："+"\n"+resstr[1]+"\n");
                    jTextArea_receive.append("返回数据为："+"\n"+resstr[1]+"\n");

                    String returncode=resstr[0];
                    String returnmessage=resstr[1];
                    String split1[]=selectPath.split(".json");
                    String splitpath=split1[0];
                    String expresult=splitpath.substring(splitpath.length()-4,splitpath.length());
                    jTextArea_receive.append("预期结果为 ：" + expresult + "\n");

                    if ((expresult.equals("PASS")&&returncode.equals("0000"))||(expresult.equals("FAIL")&&!returncode.equals("0000"))){
                        jTextArea_receive.append("测试结果为 ：测试通过" + "\n");
                        String writemessage="报文路径为 ："+selectPath+"\r\n"+"返回代码为 ："+returncode+"\r\n"+"返回数据为 ："+returnmessage+"\r\n"+"预期结果为 ："+expresult+"\r\n";
                        writeTxt(path+"\\"+doctime+"通过数据.txt",writemessage);
                        i=i+1;
                    }else {
                        jTextArea_receive.append("测试结果为 :测试失败" + "\n");
                        String writemessage="报文路径为 ："+selectPath+"\r\n"+"返回代码为 ："+returncode+"\r\n"+"预期结果为 ："+expresult+"\r\n"+"发送内层报文内容为 ："+"\r\n"+send_content+"\r\n"+"发送外层报文内容为 ："+"\r\n"+injson+"\r\n"+"返回报文内容为 ："+"\r\n"+returnmessage+"\r\n";
                        writeTxt(path+"\\"+doctime+"失败数据.txt",writemessage);
                        j=j+1;
                        System.out.println("失败的数据为 ：" + j+"\n");
                    }
                }
            }
            catch(Exception e){
                System.out.println("Error....." + e.toString());
            }
        }
                jTextArea_receive.append("一共数据个数 ：" + count+"\n");
                jTextArea_receive.append("通过的数据为 ：" + i+"\n");
                jTextArea_receive.append("失败的数据为 ：" + j+"\n");
    }
    private static void writeTxt(String path,String writemessage) throws IOException {
        File file = new File(path);
        FileWriter fw = new FileWriter(file,true);
        fw.write(writemessage);
        fw.write("************************************************************************************************************************************************************"+"\r\n");
        fw.close();
    }
    private static String updatejsontwo(String request,String one,String two,String content) throws IOException {
        JSONObject lsh = JSONObject.fromObject(request);
                    JSONObject con1= JSONObject.fromObject((lsh.get(one)));
                    con1.put(two,content);
                    String send_request=con1.toString();
                    con1.put("globalInfo",send_request);
                    return con1.toString();
    }
/**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) "


/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */

   /*     try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WSTestJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WSTestJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WSTestJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WSTestJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>
/* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WSTestJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup_c;
    private javax.swing.JButton jButton_Clear;
    private javax.swing.JRadioButton jRadioButton_post;
    private javax.swing.JRadioButton jRadioButton_sdk;
    private javax.swing.JButton jButton_Select;
    private javax.swing.JButton jButton_Send;
    private javax.swing.JButton jButton_select;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_qr;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea_receive;
    private javax.swing.JTextArea jTextArea_data;
    private javax.swing.JTextField jTextField_UrlPath;
    private javax.swing.JTextField jTextField_appid;
    private javax.swing.JTextField jTextField_version;
    private javax.swing.JTextField jTextField_taxpayerid;
    private javax.swing.JTextField jTextField_entcode;
    private javax.swing.JTextField jTextField_username;
    private javax.swing.JTextField jTextField_passwd;
    private javax.swing.JTextField jTextField_filepath;
    private javax.swing.JTextField jTextField_fpqqlsh;
    // End of variables declaration//GEN-END:variables
}

